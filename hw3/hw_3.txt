Homework 3

1.  The attached program (hw3.java) implements the infix to postfix algorithm with the toPostfix() method and evaluates with the evaluate() method.  There are two stack data structures: LLStack for strings, used for holding the operators while converting to postfix) and LStack for integers, used for holding the values while evaluating the postfix expression. The stack is a FIFO data structure, offering constant time operations for all methods used in this
 program (push, pop, size).

 The Queue is a LIFO data structure; there are two String queues implemented (LLQueue).  One is for holding the
 infix string and one holds the postfix expression.

 When this program has the infix expression "A*B+(C-D/E)" and variable values of 5, 3, 6, 8, 2, respectively, the postfix expression produced is A B * C D E / - + and evaluates to 17.

2.
                          H
                        /   \
                      F       G
                    /        /  \
                  E         I    J
                /   \           /
              C       D        K
               \
                B
                 \
                   A

    This was constructed recursively by finding the root from the postorder traversal (the last element), finding that
    element in the inorder and using it to split the elements into left and right trees.  That procedure was followed iteratively
    until the tree became full. 
